import buildsystem.buildsystem as bs

#bs.verbose = True

boost = bs.readspec(bs.readspecargs('boost.bs'))

e1 = bs.executable('myproj', srcs = ['mysrc1.cpp'])
p1 = bs.project('myproj', [e1])

c2 = bs.compiled('mysrc2.cpp')
e2 = bs.executable('myproj2', c2)
p2 = bs.project('myproj2', [e2])

l1 = bs.staticlib('mylib1', srcs = ['mylib1.cpp'])

l1u = bs.executable('mylib1use', srcs = ['mylib1use.cpp'], deps = [l1])

l2 = bs.sharedlib('mylib2', srcs = ['mylib2.cpp'])

l2u = bs.executable('mylib2use', srcs = ['mylib2use.cpp'], deps = [l2])

ps1 = bs.compiled('sub1/sub1.cpp')
ps1u = bs.executable('ps1u', srcs = ['ps1u.cpp'], deps = [ps1], opts = bs.options(incdirs = {'sub1'}))

ilb1 = bs.staticlib('implib1', srcs = {'implib1.cpp'})
il1 = bs.importlib('implib1', libs = {'.bs/implib1'}, deps = {ilb1})
ilu1 = bs.executable('ilu1', srcs = {'ilu1.cpp'}, deps = {il1})

boostuse1 = bs.executable('boostuse1', srcs = {'boostuse1.cpp'}, deps = {boost.withmods({'filesystem', 'system'})}, opts = bs.options(defines = {'BOOST_ALL_NO_LIB':None}))

spec = bs.project('mysolution', deps = [p1, p2, l1u, l2u, ps1u, ilu1, boostuse1], opts = bs.options(cflags = {'/EHsc'}))
